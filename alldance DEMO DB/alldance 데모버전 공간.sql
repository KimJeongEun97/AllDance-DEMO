-- 삭제
DROP VIEW IF EXISTS MINFO;
DROP VIEW IF EXISTS RLIST;
drop view if exists dlist;
--
DROP TABLE IF EXISTS REPLY CASCADE;
drop table if exists dancefile cascade;
drop table if exists imagefile cascade;
drop table if exists dance cascade;
DROP TABLE IF EXISTS MEMBER CASCADE;
-- 회원테이블
-- 자식테이블 외래키 제약조건들을 삭제후 부모테이블 삭제
CREATE TABLE IF NOT EXISTS MEMBER(
    M_ID VARCHAR(20) BINARY NOT NULL PRIMARY KEY,
    M_PWD VARCHAR(100) NOT NULL, -- 비번은 암호하하기 위해서
    M_NAME VARCHAR(10) NOT NULL,
    M_BIRTH DATE NOT NULL,
    M_ADDR VARCHAR(50) NOT NULL,
    M_PHONE VARCHAR(13) NOT NULL
);

INSERT INTO MEMBER(M_ID,M_PWD,M_NAME,M_BIRTH,M_ADDR,M_PHONE)
VALUES('park','1234','박종일','19901007','인천남동구','010-1111-2222');
INSERT INTO MEMBER(M_ID,M_PWD,M_NAME,M_BIRTH,M_ADDR,M_PHONE)
VALUES('test','1234','손님','19901231','서울 강남','010-2222-3333');
COMMIT;

-- 댄스 게시판
CREATE TABLE IF NOT EXISTS dance(
	d_NUM INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    d_TITLE VARCHAR(50) BINARY NOT NULL,
    d_CONTENTS TEXT BINARY NOT NULL,
    d_ID VARCHAR(20) BINARY NOT NULL,
    d_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    d_VIEWS INT DEFAULT 0 NOT NULL,
    CONSTRAINT FK_d_ID FOREIGN KEY(d_ID)
	REFERENCES MEMBER(M_ID)
);

INSERT INTO dance 
VALUES(NULL,'dance1','세상의 모든 춤을 담다1','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance2','세상의 모든 춤을 담다2','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance3','세상의 모든 춤을 담다3','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance4','세상의 모든 춤을 담다4','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance5','세상의 모든 춤을 담다5','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance6','세상의 모든 춤을 담다6','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance7','세상의 모든 춤을 담다7','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance8','세상의 모든 춤을 담다8','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance9','세상의 모든 춤을 담다9','park',DEFAULT,DEFAULT);
INSERT INTO dance 
VALUES(NULL,'dance10','세상의 모든 춤을 담다10','park',DEFAULT,DEFAULT);
commit;

-- 파일 업로드 테이블 추가할 것(1:N)
CREATE TABLE IF NOT EXISTS dancefile(
    dF_NUM INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    dF_dNUM INT NOT NULL,
    dF_ORINAME VARCHAR(50) NOT NULL,
    dF_SYSNAME VARCHAR(50) NOT NULL,
    CONSTRAINT FK_dF_dNUM FOREIGN KEY(dF_dNUM)
	REFERENCES dance(d_NUM)
);
-- 섬네일 이미지 파일 업로드
CREATE TABLE IF NOT EXISTS imagefile(
    iF_NUM INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    iF_dNUM INT NOT NULL,
    iF_ORINAME VARCHAR(50) NOT NULL,
    iF_SYSNAME VARCHAR(50) NOT NULL,
    CONSTRAINT FK_iF_dNUM FOREIGN KEY(iF_dNUM)
	REFERENCES dance(d_NUM)
);


-- 답글 게시판
CREATE TABLE IF NOT EXISTS REPLY(
    R_NUM INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    R_dNUM INT NOT NULL,
    R_CONTENTS VARCHAR(200) NOT NULL,
    R_ID VARCHAR(20) BINARY NOT NULL,
    R_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_R_dNUM FOREIGN KEY(R_dNUM)
	REFERENCES dance(d_NUM),
    CONSTRAINT FK_R_ID FOREIGN KEY(R_ID)
	REFERENCES MEMBER(M_ID)
 );

-- DUMMY DATA
INSERT INTO REPLY VALUES(NULL,5,'댓글1','park',DEFAULT); 
INSERT INTO REPLY VALUES(NULL,5,'댓글2','park',DEFAULT);
INSERT INTO REPLY VALUES(NULL,6,'댓글1','test',DEFAULT); 
INSERT INTO REPLY VALUES(NULL,6,'댓글2','test',DEFAULT);
COMMIT;
-- SELECT * FROM REPLY;

-- 로그인 후 출력할 회원정보 뷰
CREATE OR REPLACE VIEW MINFO AS
SELECT M.M_ID,M.M_NAME
FROM MEMBER M;
-- SELECT * FROM MINFO;

-- 최신글 순으로 댓글 출력 VIEW
CREATE OR REPLACE VIEW RLIST AS
SELECT R_NUM, R_dNUM, R_CONTENTS, R_DATE, R_ID
FROM REPLY
ORDER BY R_DATE DESC;
-- SELECT * FROM RLIST;

-- 최신글순으로 원글 출력 VIEW
CREATE OR REPLACE VIEW dLIST AS
SELECT d.d_NUM,
       d.d_TITLE,
       d.d_CONTENTS,
       d.d_ID,
       m.m_NAME,
       d.d_DATE,
       d.d_VIEWS,
       im.iF_SYSNAME,
       im.if_oriname
FROM dance d 
INNER JOIN MEMBER M
ON d.d_ID=m.m_ID
INNER JOIN imagefile im -- imagefile 테이블과 연결
ON im.iF_dNUM = d.d_num -- if_dnum은 d.d_num과 같다
ORDER BY d.d_DATE DESC;
commit;

SELECT * FROM dLIST;

